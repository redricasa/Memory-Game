{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makda\\\\Desktop\\\\UW coding bootcamp\\\\week19\\\\Memory-Game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Navbar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport Geez from \"./components/geez\";\nimport json from \"./geezNums.json\";\nimport _ from 'underscore';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      topScore: 0,\n      clickedArray: [],\n      message: \"click on a Ge'ez number to start!\"\n    };\n    this.state = {\n      count: 0\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n\n  handleIncrement() {\n    // We always use the setState method to update a component's state\n    this.setState({\n      count: this.state.count + 1\n    }); // alert(this.state.count)\n  } //  setState for the geez\n\n\n  render() {\n    var Cards = []; // loops through the geezNums.json and renders images\n\n    for (let index = 0; index < json.length; index++) {\n      Cards.push(React.createElement(Geez, {\n        image: json[index].image,\n        name: json[index].name,\n        label: json[index].label,\n        onClick: this.handleIncrement,\n        key: json[index].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    } //using underscore.js for the shuffle functionality to shuffle the cards everytime on of them gets clicked\n\n\n    Cards = _.shuffle(Cards);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Key=\", this.state.count, \",Key=\", this.state.topScore, \" ,Key=\", this.state.topScore))), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, Cards), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/makda/Desktop/UW coding bootcamp/week19/Memory-Game/clicky/src/App.js"],"names":["React","Component","Header","Navbar","Footer","Geez","json","_","App","constructor","props","state","count","topScore","clickedArray","message","handleIncrement","bind","setState","render","Cards","index","length","push","image","name","label","id","shuffle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,CAAP,MAAc,YAAd;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAQxBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAPnBC,KAOmB,GAPX;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,QAAQ,EAAE,CAFN;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAOW;AAEf,SAAKJ,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb,CAFe,CAIf;;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AACDD,EAAAA,eAAe,GAAG;AACd;AACA,SAAKE,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,KAAd,EAFc,CAGd;AACH,GAnBuB,CAqB5B;;;AACIO,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,EAAZ,CADK,CAEL;;AACA,SAAI,IAAIC,KAAK,GAAC,CAAd,EAAgBA,KAAK,GAAEf,IAAI,CAACgB,MAA5B,EAAoCD,KAAK,EAAzC,EAA4C;AACxCD,MAAAA,KAAK,CACJG,IADD,CACM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,IAAI,CAACe,KAAD,CAAJ,CAAYG,KAAzB;AAAgC,QAAA,IAAI,EAAElB,IAAI,CAACe,KAAD,CAAJ,CAAYI,IAAlD;AAAwD,QAAA,KAAK,EAAEnB,IAAI,CAACe,KAAD,CAAJ,CAAYK,KAA3E;AAAkF,QAAA,OAAO,EAAE,KAAKV,eAAhG;AAAiH,QAAA,GAAG,EAAEV,IAAI,CAACe,KAAD,CAAJ,CAAYM,EAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;AAEH,KANI,CAOL;;;AACAP,IAAAA,KAAK,GAAGb,CAAC,CAACqB,OAAF,CAAUR,KAAV,CAAR;AAEA,WAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQ,KAAKT,KAAL,CAAWC,KAAnB,WAA+B,KAAKD,KAAL,CAAWE,QAA1C,YAA0D,KAAKF,KAAL,CAAWE,QAArE,CADJ,CAFA,CADJ,EASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAWI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKO,KADL,CAXJ,EAcI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CAFJ;AAmBH;;AAnDuB;;AAsD5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Header from \"./components/header\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Footer from \"./components/footer\";\r\nimport Geez from \"./components/geez\";\r\nimport json from \"./geezNums.json\";\r\nimport _ from 'underscore';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        count: 0,\r\n        topScore: 0,\r\n        clickedArray: [],\r\n        message: \"click on a Ge'ez number to start!\"\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {count: 0};\r\n    \r\n        // This binding is necessary to make `this` work in the callback\r\n        this.handleIncrement = this.handleIncrement.bind(this);\r\n    }\r\n    handleIncrement() {\r\n        // We always use the setState method to update a component's state\r\n        this.setState({ count: this.state.count + 1 });\r\n        // alert(this.state.count)\r\n    }\r\n\r\n//  setState for the geez\r\n    render() {\r\n        var Cards = [];\r\n        // loops through the geezNums.json and renders images\r\n        for(let index=0;index< json.length ;index++){\r\n            Cards\r\n            .push(<Geez image={json[index].image} name={json[index].name} label={json[index].label} onClick={this.handleIncrement} key={json[index].id}/>)\r\n        }\r\n        //using underscore.js for the shuffle functionality to shuffle the cards everytime on of them gets clicked\r\n        Cards = _.shuffle(Cards)\r\n        \r\n        return (\r\n\r\n            <React.Fragment>\r\n                <Navbar>\r\n                {/* this sets the props object for count so that the navbar component gets props. (any) word is needed as well or there won't be a number! */}\r\n                <div>\r\n                    <p>Key={this.state.count},Key={this.state.topScore} ,Key={this.state.topScore}</p>\r\n                    \r\n                </div>\r\n                \r\n                </Navbar>\r\n                <Header />  \r\n                {/* the main tag keeps the images together and formats it in a way where they maintain their proportions */}\r\n                <main className=\"container\">\r\n                    {Cards}\r\n                </main>\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}