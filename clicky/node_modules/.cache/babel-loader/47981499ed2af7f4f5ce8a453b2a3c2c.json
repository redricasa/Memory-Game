{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\makda\\\\Desktop\\\\UW coding bootcamp\\\\week19\\\\Memory-Game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/header\";\nimport Navbar from \"./components/navbar\";\nimport Footer from \"./components/footer\";\nimport Geez from \"./components/geez\";\nimport json from \"./geezNums.json\";\nimport axios from \"axios\";\nimport Counter from './components/counter/counter';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0\n    };\n\n    this.handleIncrement = () => {\n      // We always use the setState method to update a component's state\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  componentDidMount() {// this.setState({cards: Cards})\n    // axios.get(\n    // )\n    //     .then(result=> \n    //         console.log(`Here's the geezNums.json API data: ${result.data}`))\n    //     .catch( err =>\n    //         console.log(`Error Message: ${err}`)\n    //     )\n  }\n\n  shuffle(event) {\n    event.prev;\n  } //   setState for the geez\n\n\n  render() {\n    const Cards = []; // loops through the geezNums.json\n\n    for (let index = 0; index < json.length; index++) {\n      Cards.push(React.createElement(Geez, {\n        image: json[index].image,\n        name: json[index].name,\n        label: json[index].label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    } // TODO using underscore.js for the shuffle functionality to shuffle the cards everytime on of them gets clicked\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, Cards), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/makda/Desktop/UW coding bootcamp/week19/Memory-Game/clicky/src/App.js"],"names":["React","Component","Header","Navbar","Footer","Geez","json","axios","Counter","App","state","count","handleIncrement","setState","componentDidMount","shuffle","event","prev","render","Cards","index","length","push","image","name","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBS,KADwB,GAChB;AACJC,MAAAA,KAAK,EAAE;AADH,KADgB;;AAAA,SAKxBC,eALwB,GAKN,MAAM;AACpB;AACA,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,KARuB;AAAA;;AAUxBG,EAAAA,iBAAiB,GAAE,CACf;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAO;AACVA,IAAAA,KAAK,CAACC,IAAN;AACH,GAzBuB,CA0B5B;;;AACIC,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,EAAd,CADK,CAEL;;AACA,SAAI,IAAIC,KAAK,GAAC,CAAd,EAAgBA,KAAK,GAAEd,IAAI,CAACe,MAA5B,EAAoCD,KAAK,EAAzC,EAA4C;AACxCD,MAAAA,KAAK,CACJG,IADD,CACM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,IAAI,CAACc,KAAD,CAAJ,CAAYG,KAAzB;AAAgC,QAAA,IAAI,EAAEjB,IAAI,CAACc,KAAD,CAAJ,CAAYI,IAAlD;AAAwD,QAAA,KAAK,EAAElB,IAAI,CAACc,KAAD,CAAJ,CAAYK,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;AAEH,KANI,CAOL;;;AAIA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAMI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,KADL,CANJ,EASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAFJ;AAcH;;AApDuB;;AAuD5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Header from \"./components/header\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Footer from \"./components/footer\";\r\nimport Geez from \"./components/geez\";\r\nimport json from \"./geezNums.json\";\r\nimport axios from \"axios\";\r\nimport Counter from './components/counter/counter';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        count: 0\r\n    };\r\n\r\n    handleIncrement = () => {\r\n        // We always use the setState method to update a component's state\r\n        this.setState({ count: this.state.count + 1 });\r\n    };\r\n\r\n    componentDidMount(){\r\n        // this.setState({cards: Cards})\r\n\r\n        // axios.get(\r\n\r\n        // )\r\n        //     .then(result=> \r\n        //         console.log(`Here's the geezNums.json API data: ${result.data}`))\r\n        //     .catch( err =>\r\n        //         console.log(`Error Message: ${err}`)\r\n        //     )\r\n    }\r\n\r\n    shuffle(event){\r\n        event.prev\r\n    }\r\n//   setState for the geez\r\n    render() {\r\n        const Cards = [];\r\n        // loops through the geezNums.json\r\n        for(let index=0;index< json.length ;index++){\r\n            Cards\r\n            .push(<Geez image={json[index].image} name={json[index].name} label={json[index].label} />)\r\n        }\r\n        // TODO using underscore.js for the shuffle functionality to shuffle the cards everytime on of them gets clicked\r\n        \r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar>\r\n\r\n                </Navbar>\r\n                <Header />\r\n                \r\n                <main className=\"container\">\r\n                    {Cards}\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}